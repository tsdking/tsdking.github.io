<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>老徐的博客</title>
  
  <subtitle>永远不变的是变化</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tsdking.github.io/"/>
  <updated>2018-04-24T03:59:42.189Z</updated>
  <id>http://tsdking.github.io/</id>
  
  <author>
    <name>老徐</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android反编译的简单总结</title>
    <link href="http://tsdking.github.io/2018/04/20/apkuncode/"/>
    <id>http://tsdking.github.io/2018/04/20/apkuncode/</id>
    <published>2018-04-19T17:34:59.000Z</published>
    <updated>2018-04-24T03:59:42.189Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android反编译的简单总结"><a href="#Android反编译的简单总结" class="headerlink" title="Android反编译的简单总结"></a>Android反编译的简单总结</h1><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li><a href="https://bitbucket.org/iBotPeaches/apktool/downloads/" target="_blank" rel="noopener">apktool.jar</a></li></ul><blockquote><p>安卓apk反编译神器,主要作用于资源文件,清单文件<strong>等</strong>,也可用于jar;<br><strong>解码\构建</strong> 双向全能,用过的都说好.</p></blockquote><ul><li>apktool.bat</li></ul><blockquote><p>一段脚本,结合<code>apktool.jar</code>使用</p></blockquote><ul><li>Java 7 (JRE 1.7)及以上,使用<code>java -version</code>查看</li><li><a href="https://sourceforge.net/projects/dex2jar/" target="_blank" rel="noopener">dex2jar</a></li></ul><blockquote><p>用于android的将classes.dex转换成jar的工具,可结合<code>JD-GUI</code>使用</p></blockquote><ul><li><a href="http://www.softpedia.com/get/Programming/Debuggers-Decompilers-Dissasemblers/JD-GUI.shtml" target="_blank" rel="noopener">JD-GUI</a> </li></ul><blockquote><p>免安装,非商业用途的java反编译器,如可用于查看jar包中的代码</p></blockquote><ul><li>了解smali语法并且会使用 Android SDK, AAPT</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p>若已安装,可跳过</p></blockquote><ul><li><strong>Windows</strong></li></ul><ol><li>复制如下脚本,并另存为<code>apktool.bat</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%PATH_BASE%"</span> == <span class="string">""</span> <span class="built_in">set</span> PATH_BASE=%PATH%</span><br><span class="line"><span class="built_in">set</span> PATH=%CD%;%PATH_BASE%;</span><br><span class="line">chcp 65001 2&gt;nul &gt;nul</span><br><span class="line">java -jar -Duser.language=en -Dfile.encoding=UTF8 <span class="string">"%~dp0\apktool.jar"</span> %*</span><br></pre></td></tr></table></figure><ol><li>下载最新版的<a href="https://bitbucket.org/iBotPeaches/apktool/downloads/" target="_blank" rel="noopener">apktool</a></li><li>把下载好的jar重命名为<code>apktool.jar</code></li><li>把上述两个文件<code>apktool.bat</code> &amp; <code>apktool.jar</code>放到同一个文件夹下,如<code>C:\windows</code></li><li>(可选)如果你愿意,可以把第4步的路径添加到系统的环境变量里(&amp;PATH)</li><li>打开cmd 输入apktool 检查是否输入帮助信息,是否安装成功</li></ol><ul><li><strong>Linux</strong></li></ul><ol><li>复制如下脚本,并另存为<code>apktool</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%PATH_BASE%"</span> == <span class="string">""</span> <span class="built_in">set</span> PATH_BASE=%PATH%</span><br><span class="line"><span class="built_in">set</span> PATH=%CD%;%PATH_BASE%;</span><br><span class="line">chcp 65001 2&gt;nul &gt;nul</span><br><span class="line">java -jar -Duser.language=en -Dfile.encoding=UTF8 <span class="string">"%~dp0\apktool.jar"</span> %*</span><br></pre></td></tr></table></figure><ol><li>下载最新版的<a href="https://bitbucket.org/iBotPeaches/apktool/downloads/" target="_blank" rel="noopener">apktool</a></li><li>把下载好的jar重命名为<code>apktool.jar</code></li><li>把上述两个文件<code>apktool</code> &amp; <code>apktool.jar</code>放到同一个文件夹下,如<code>/usr/local/bin</code></li><li>确保上述文件有可执行权限<code>chmod +x</code></li><li>Terminal运行<code>apktool</code> </li></ol><ul><li><strong>Mac OS X</strong></li></ul><ol><li>复制如下脚本,并另存为<code>apktool</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%PATH_BASE%"</span> == <span class="string">""</span> <span class="built_in">set</span> PATH_BASE=%PATH%</span><br><span class="line"><span class="built_in">set</span> PATH=%CD%;%PATH_BASE%;</span><br><span class="line">chcp 65001 2&gt;nul &gt;nul</span><br><span class="line">java -jar -Duser.language=en -Dfile.encoding=UTF8 <span class="string">"%~dp0\apktool.jar"</span> %*</span><br></pre></td></tr></table></figure><ol><li>下载最新版的<a href="https://bitbucket.org/iBotPeaches/apktool/downloads/" target="_blank" rel="noopener">apktool</a></li><li>把下载好的jar重命名为<code>apktool.jar</code></li><li>把上述两个文件<code>apktool</code> &amp; <code>apktool.jar</code>放到同一个文件夹下,如<code>/usr/local/bin</code></li><li>确保上述文件有可执行权限<code>chmod +x</code></li><li>Terminal运行<code>apktool</code> </li></ol><ul><li><p><strong>注意</strong></p><pre><code>apktool脚本并不是必须的,它只是帮你省去了`java -jar apktool.jar`这样重复的指令</code></pre></li></ul><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><h3 id="Apktool"><a href="#Apktool" class="headerlink" title="Apktool"></a>Apktool</h3><p>首先我们要了解一下apk的结构,apk只是一个包含资源以及java代码的zip文件,可使用任何解压软件直接解压(如7zip),解压后可以得到诸如 <code>classes.dex</code> and <code>resources.arsc</code>这样的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ unzip testapp.apk</span><br><span class="line">Archive:  testapp.apk</span><br><span class="line"> inflating: AndroidManifest.xml</span><br><span class="line"> inflating: classes.dex</span><br><span class="line"> extracting: res/drawable-hdpi/ic_launcher.png</span><br><span class="line"> inflating: res/xml/literals.xml</span><br><span class="line"> inflating: res/xml/references.xml</span><br><span class="line"> extracting: resources.arsc</span><br></pre></td></tr></table></figure><p>然而 这个时候只是解压了apk,如果你打开<code>AndroidManifest.xml</code>将会看到下面这些神秘字符</p><p><img src="http://www.wailian.work/images/2018/04/21/2018-04-22_112450.png" alt="2018-04-22_112450.png"></p><p>亦或是这些神秘字符,反正看不懂就对了</p><p><img src="http://www.wailian.work/images/2018/04/21/2018-04-22_112631.png" alt="2018-04-22_112631.png"></p><p>现在<code>apktool</code>排上用场了</p><h4 id="解码"><a href="#解码" class="headerlink" title="解码"></a>解码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ apktool.bat  d -f girl.apk -o zsh</span><br><span class="line">I: Using Apktool 2.3.2 on girl.apk</span><br><span class="line">I: Loading resource table...</span><br><span class="line">I: Decoding AndroidManifest.xml with resources...</span><br><span class="line">I: Loading resource table from file: C:\Users\Administrator\AppData\Local\apktool\framework\1.apk</span><br><span class="line">I: Regular manifest package...</span><br><span class="line">I: Decoding file-resources...</span><br><span class="line">I: Decoding values */* XMLs...</span><br><span class="line">I: Baksmaling classes.dex...</span><br><span class="line">I: Copying assets and libs...</span><br><span class="line">I: Copying unknown files...</span><br><span class="line">I: Copying original files...</span><br></pre></td></tr></table></figure><p>解释一下上述指令中各参数的定义</p><blockquote><p><strong>girl.apk</strong>为要解码的安装包,名字随便起的</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d,decode</span><br></pre></td></tr></table></figure><blockquote><p>解码</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-f, --force</span><br></pre></td></tr></table></figure><blockquote><p>若目标输出文件夹已经存在,则先强制删除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-o, --output &lt;FILE&gt;</span><br></pre></td></tr></table></figure><blockquote><p>指定目标输出文件夹,若没有则自动创建</p></blockquote><p>其他可选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-api, --api-level &lt;API&gt;</span><br></pre></td></tr></table></figure><blockquote><p>要生成的smali文件的数字api级别（默认为targetSdkVersion）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-b, --no-debug-info</span><br></pre></td></tr></table></figure><blockquote><p>防止baksmali写出调试信息（.local，.param，.line等）,比较不同版本apk的smali文件时使用,行号和调试将在各个版本之间改变，这可能会使阅读DIFF报告变得很痛苦。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--keep-broken-res</span><br></pre></td></tr></table></figure><blockquote><p>当尝试反编译一个非当前标准结构的apk时,会出现类似”Invalid Config Flags Detected. Dropping Resources…”的错误信息,这可能是用于使用了未知新版本的AndroidSDK构建或非已知标准结构的apk,使用上述命名可以允许错误继续decode,但是产生的错误信息需要你手动修复</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-m, --match-original</span><br></pre></td></tr></table></figure><blockquote><p>解码时将尽可能保持与原始文件一致,但是这样做可能会影响到重新构建rebuild</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--no-assets</span><br></pre></td></tr></table></figure><blockquote><p> 解码时如果遇到未知的asset资产文件直接跳过</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-p, --frame-path &lt;DIR&gt;</span><br></pre></td></tr></table></figure><blockquote><p> 指定本地framework文件的路径,这个后面会讲到,该文件解码时会用到,不指定时,apktool会到默认的路径<code>C:\Users\Administrator\AppData\Local\apktool\framework\</code>中查找,找不到就下载</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-r, --no-res</span><br></pre></td></tr></table></figure><blockquote><p> 如果只是编辑Java (smali) 文件,则推荐使用,因为它使 <code>resources.arsc</code>保持不变,官方说法是<code>without any decode.</code>,这样解码与重构都会更快</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-s, --no-src</span><br></pre></td></tr></table></figure><blockquote><p> 和上述命名类似,如果只是编辑资源文件,则推荐使用,因为它使 <code>*.dex</code>保持不变,同样官方说法是<code>without any decode.</code>,这样解码与重构都会更快</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-t, --frame-tag &lt;TAG&gt;</span><br></pre></td></tr></table></figure><blockquote><p> 解码时,使用指定tag的framework文件,这个用的很少,知道就行了</p></blockquote><h4 id="重新构建"><a href="#重新构建" class="headerlink" title="重新构建"></a>重新构建</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ apktool.bat  b girl -o newGirl.apk</span><br><span class="line">I: Using Apktool 2.3.2</span><br><span class="line">I: Checking whether sources has changed...</span><br><span class="line">I: Checking whether resources has changed...</span><br><span class="line">I: Building apk file...</span><br><span class="line">I: Copying unknown files/dir...</span><br><span class="line">I: Built apk...</span><br></pre></td></tr></table></figure><p>注意若不指定<code>-o newGirl.apk</code>,则默认的输出路径为<code>girl/build/dist</code></p><p>构建时可用的选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-c, --copy-original</span><br></pre></td></tr></table></figure><blockquote><p> 官方表示即将弃用该选项,它表示使用原apk的签名等信息<br> Copies original <code>AndroidManifest.xml</code> and <code>META-INF</code>folder into built apk.</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-d, --debug</span><br></pre></td></tr></table></figure><blockquote><p> 自动在清单文件中添加<code>debuggable=&quot;true&quot;</code> ,良心操作</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-f, --force-all</span><br></pre></td></tr></table></figure><blockquote><p> 在构建过程中覆盖现有文件，重新组合resources.arsc文件和dex文件（s）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--use-aapt2</span><br></pre></td></tr></table></figure><blockquote><p> 框架文件的加载位置</p></blockquote><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><p>Android应用程序一般会依赖或使用系统framework层的的代码和资源,这里简称为’框架资源’,Apktool工作时也是需要这些框架资源的;</p><p>使用最新版的apktool时,它内部已经包含了当前正式发布的最新的AOSP 框架层数据,所以会较少遇到问题,但是由于android系统毫无节制的开放性,国内各厂商把源码改的乱七八糟,这其中当然包括framework层;当尝试decode这些定制rom中的应用时,则需要先安装各厂商的<strong>framework files</strong></p><p>下面引入一个官方的例子</p><p>如果你想要解码 <code>HtcContacts.apk</code>(HTC系统的通讯录应用),可能会得到下面的错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ apktool d HtcContacts.apk</span><br><span class="line">I: Loading resource table...</span><br><span class="line">I: Decoding resources...</span><br><span class="line">I: Loading resource table from file: 1.apk</span><br><span class="line">W: Could not decode attr value, using undecoded value instead: ns=android, name=drawable</span><br><span class="line">W: Could not decode attr value, using undecoded value instead: ns=android, name=icon</span><br><span class="line">Can&apos;t find framework resources for package of id: 2. You must install proper framework files, see project website for more info.</span><br></pre></td></tr></table></figure><p>所以在解码之前,需要先从HTC设备中pull出<strong>框架资源</strong>  <code>com.htc.resources.apk</code>并且安装它;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ apktool if com.htc.resources.apk</span><br><span class="line">I: Framework installed to: 2.apk</span><br><span class="line"></span><br><span class="line">$ apktool d HtcContacts.apk </span><br><span class="line">I: Loading resource table...</span><br><span class="line">I: Decoding resources...</span><br><span class="line">I: Loading resource table from file: /home/brutall/apktool/framework/1.apk</span><br><span class="line">I: Loading resource table from file: /home/brutall/apktool/framework/2.apk</span><br><span class="line">I: Copying assets and libs...</span><br></pre></td></tr></table></figure></p><p>从设备中找到框架资源文件(这一步只能靠猜了):</p><ul><li><p>可能的文件路径</p><ul><li>/system/framework</li><li>/data/system-framework</li><li>/system/app</li><li>/system/priv-app</li></ul></li><li><p>可能的文件名</p><ul><li>resources</li><li>res</li><li>framework</li></ul></li></ul><p>apktool在使用这些文件时会自动缓存到默认目录下</p><ul><li>unix - <code>$HOME/.local/share/apktool</code></li><li>windows - <code>%UserProfile%\AppData\Local\apktool</code></li><li>mac - <code>$HOME/Library/apktool</code></li></ul><p>如:我的是在<code>C:\Users\Administrator\AppData\Local\apktool\framework</code></p><p>这个选项或许有用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apktool empty-framework-dir</span><br></pre></td></tr></table></figure><h3 id="Dex2jar"><a href="#Dex2jar" class="headerlink" title="Dex2jar"></a>Dex2jar</h3><p>方式一:</p><blockquote><ol><li>修改apk扩展名为zip</li><li>解压并拷贝classes.dex文件到dex2jar目录</li><li>右键在dex2jar目录中打开cmd,保证cmd的工作路径是在当前目录,否则就cd进来</li><li>cmd中运行<code>d2j-dex2jar.bat classes.dex</code></li><li>自动生成classes-dex2jar.jar 文件,接下来就可以用JD-GUI打开了查看源码</li></ol></blockquote><p>方式二:</p><blockquote><ol><li>拷贝test.apk到dex2jar安装目录</li><li>打开cmd,直接运行<code>d2j-dex2jar.bat test.apk</code></li><li>自动生成test-dex2jar.jar 文件,接下来就可以用JD-GUI打开了查看源码</li></ol></blockquote><h3 id="JD-GUI"><a href="#JD-GUI" class="headerlink" title="JD-GUI"></a>JD-GUI</h3><blockquote><p>用法比较简单,直接把上一步生成的jar包拖到<code>jd-gui.exe</code>打开即可</p></blockquote><p><img src="http://www.wailian.work/images/2018/04/23/2018-04-23_175346.png" alt="2018-04-23_175346.png"></p><h2 id="Google开源的神器ClassyShark"><a href="#Google开源的神器ClassyShark" class="headerlink" title="Google开源的神器ClassyShark"></a>Google开源的神器ClassyShark</h2><blockquote><p>可以可靠地浏览任何Android可执行文件并显示重要信息，例如类接口和成员，dex数量和依赖关系。 ClassyShark支持多种格式，包括库（.dex，.aar，.so），可执行文件（.apk，.jar，.class）和所有Android二进制XML：AndroidManifest，资源，布局等。</p><ul><li>直接查看apk结构资源,甚至源码</li><li>在一定程度上: <a href="https://github.com/google/android-classyshark" target="_blank" rel="noopener">ClassyShark</a> = Apktool+dex2jar+JD-DUI</li></ul></blockquote><p>用法:</p><p>下载 <a href="https://github.com/google/android-classyshark/releases" target="_blank" rel="noopener">最新的JAR</a> ,执行 <code>java -jar ClassyShark.jar</code></p><p><img src="http://www.wailian.work/images/2018/04/23/2018-04-23_181150.png" alt="2018-04-23_181150.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Android反编译的简单总结&quot;&gt;&lt;a href=&quot;#Android反编译的简单总结&quot; class=&quot;headerlink&quot; title=&quot;Android反编译的简单总结&quot;&gt;&lt;/a&gt;Android反编译的简单总结&lt;/h1&gt;&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="android 工具 反编译" scheme="http://tsdking.github.io/tags/android-%E5%B7%A5%E5%85%B7-%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>定时执行周期任务之AlarmManager，了解一下</title>
    <link href="http://tsdking.github.io/2018/04/18/alarmmanager/"/>
    <id>http://tsdking.github.io/2018/04/18/alarmmanager/</id>
    <published>2018-04-18T04:28:14.000Z</published>
    <updated>2018-04-18T16:42:34.618Z</updated>
    
    <content type="html"><![CDATA[<h2 id="报菜名"><a href="#报菜名" class="headerlink" title="报菜名"></a>报菜名</h2><blockquote><p>​    AlarmManager可用于计划未来的<strong>单次或重复</strong>的操作，<strong>甚至在应用程序没有运行时也可以执行任务</strong>，它通过PendingIntent触发执行各种<strong>系统组件，</strong>如BroadcastReceiver，Activity或Service等。</p><p>​    或者说AlarmManager比较适用于<u>应用程序没有运行</u>但仍然需要执行某些操作的场景。如果<u>程序运行时</u>需要执行简单的定时操作，使用Handler的postAtTime()和postDelay()就可以了。</p><p>在设备重启后，提醒自动失效，需要手动计划之前注册的提醒</p></blockquote><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h3 id="唤醒类型"><a href="#唤醒类型" class="headerlink" title="唤醒类型"></a>唤醒类型</h3><table><thead><tr><th>ELAPSED_REALTIME</th><th style="text-align:left">ELAPSED_REALTIME_WAKEUP</th><th style="text-align:left">RTC</th><th style="text-align:left">RTC_WAKEUP</th></tr></thead><tbody><tr><td>根据设备上次启动以来的时间值（毫秒）触发提醒</td><td style="text-align:left">根据经过的时间触发提醒，如果设备处于休眠状态，将被<strong>激活</strong></td><td style="text-align:left">根据UTC时间触发警告</td><td style="text-align:left">根据UTC时间触发警告，如果设备处于休眠状态，将被<strong>激活</strong></td></tr></tbody></table><p>注意，如果使用<code>ELAPSED_REALTIME_WAKEUP</code>或<code>RTC_WAKEUP</code>这种唤醒类型的提醒，系统虽然会被唤醒但是不会保持唤醒状态，在执行唤醒事件的后台工作时，需要通过PowerManager获得WakeLock，否则系统会重新将设备转入休眠状态，你要本要执行的操作也会被停止。</p><p>###PendingIntent</p><blockquote><p>PendingIntent有很多构造方法，但是必须要保证它能正确的指向要触发的应用程序组件。</p></blockquote><p><img src="http://www.wailian.work/images/2018/04/18/pendingintent.png" alt="pendingintent.png"></p><h2 id="上菜"><a href="#上菜" class="headerlink" title="上菜"></a>上菜</h2><p><strong>AlarmReceiver</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AlarmReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> IntentFilter mIntentFilter;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ACTION_ALARM = <span class="string">"ACTION_ALARM"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AlarmReceiver</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mIntentFilter = <span class="keyword">new</span> IntentFilter();</span><br><span class="line">        mIntentFilter.addAction(ACTION_ALARM);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mIntentFilter.matchAction(intent.getAction())) &#123;</span><br><span class="line">            Calendar now = Calendar.getInstance();</span><br><span class="line">            Toast.makeText(context,</span><br><span class="line">                    <span class="string">"Msg："</span> + SimpleDateFormat.getTimeInstance().format(now.getTime()),</span><br><span class="line">                    Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>注意注册：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">".AlarmReceiver"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>AlarmActivity</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AlarmActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> AlarmManager mAlarmManager;</span><br><span class="line">    <span class="keyword">private</span> PendingIntent mPendingIntent;</span><br><span class="line">    <span class="keyword">private</span> Intent mIntent;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> mInterval = <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_alarm);</span><br><span class="line">        mAlarmManager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);</span><br><span class="line">        mIntent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>,AlarmReceiver.class);</span><br><span class="line">        mIntent.setAction(AlarmReceiver.ACTION_ALARM);</span><br><span class="line">        mPendingIntent = PendingIntent.getBroadcast(<span class="keyword">this</span>, <span class="number">0</span>, mIntent, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        mAlarmManager.setRepeating(</span><br><span class="line">                AlarmManager.ELAPSED_REALTIME,</span><br><span class="line">                SystemClock.elapsedRealtime() + mInterval,</span><br><span class="line">                mInterval,</span><br><span class="line">                mPendingIntent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cancle</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        mAlarmManager.cancel(mPendingIntent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h3><blockquote><p>每天上午9点执行任务<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start2</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> oneDay=<span class="number">24</span>*<span class="number">3600</span>*<span class="number">100</span>;</span><br><span class="line">        <span class="keyword">long</span> firstTime;</span><br><span class="line">        <span class="comment">//创建一个日历，并设置提醒的时间为09:00</span></span><br><span class="line">        Calendar startTime = Calendar.getInstance();</span><br><span class="line">        startTime.set(Calendar.HOUR_OF_DAY,<span class="number">9</span>);</span><br><span class="line">        startTime.set(Calendar.MINUTE,<span class="number">0</span>);</span><br><span class="line">        startTime.set(Calendar.SECOND,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        Calendar now=Calendar.getInstance();</span><br><span class="line">        <span class="keyword">if</span> (now.before(startTime))&#123;</span><br><span class="line">            <span class="comment">//现在还没到上午9点，从今天算起</span></span><br><span class="line">            firstTime=startTime.getTimeInMillis();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//从明天上午9点算起</span></span><br><span class="line">            startTime.add(Calendar.DATE,<span class="number">1</span>);</span><br><span class="line">            firstTime=startTime.getTimeInMillis();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置提醒</span></span><br><span class="line">        mAlarmManager.setRepeating(</span><br><span class="line">                AlarmManager.RTC_WAKEUP,</span><br><span class="line">                firstTime,</span><br><span class="line">                oneDay,</span><br><span class="line">                mPendingIntent);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>​    十九岁那年的分水岭，Android4.4（19）开始所有的提醒都是不准确的，这意味着讲通过一个小窗口触发它们，连同这个新行为还一起添加了API方法setExat(),通过这个方法我们可以声明下面的提醒不能放入不准确的窗口。</p><p>​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;报菜名&quot;&gt;&lt;a href=&quot;#报菜名&quot; class=&quot;headerlink&quot; title=&quot;报菜名&quot;&gt;&lt;/a&gt;报菜名&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;​    AlarmManager可用于计划未来的&lt;strong&gt;单次或重复&lt;/strong&gt;的操作，&lt;s
      
    
    </summary>
    
    
      <category term="android" scheme="http://tsdking.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>定时执行周期任务之JobScheduler,了解一下</title>
    <link href="http://tsdking.github.io/2018/04/17/jobscheduler/"/>
    <id>http://tsdking.github.io/2018/04/17/jobscheduler/</id>
    <published>2018-04-17T09:34:59.000Z</published>
    <updated>2018-04-17T11:44:14.184Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>JobScheduler是Android5.0及以后的版本由系统提供的用于解决高效处理<strong>计划后台工作</strong>的<em>系统服务</em><br>即使应用程序进程当前未运行,计划的任务也会运行,框架自动处理为计划作业获得唤醒锁的工作,从而甚至在设备空闲时,工作也会继续进行.</p></blockquote><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><pre><code>- 后台周期性任务- 非及时性工作如定期数据库数据更新- 设备充电时需要执行的工作,一般是不需要经常执行但是比较耗时耗电的操作如上传一些资源,网络拉取一些统计数据之类的- 设备空闲时(未激活,休眠时)需要执行的工作- 特定网络状态时才需要执行的工作</code></pre><h2 id="适用版本"><a href="#适用版本" class="headerlink" title="适用版本"></a>适用版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Android 5.0以上即SDK&gt;=21</span><br></pre></td></tr></table></figure><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><pre><code>1. 避免频繁的唤醒硬件模块，造成不必要的电量消耗2. 避免在不合适的时间(例如低电量情况下、弱网络或者移动网络情况下的)执行过多的任务消耗电量3. Android Framework层会尝试尽可能的**成批执行**操作,从而最大限度减少对设备电池和网络使用率的影响 </code></pre><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><p><strong>非严格的计时,即计时的默认操作可能是不准确的</strong></p><h2 id="看代码"><a href="#看代码" class="headerlink" title="看代码"></a>看代码</h2><h3 id="WorkJobService"><a href="#WorkJobService" class="headerlink" title="WorkJobService"></a>WorkJobService</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TargetApi</span>(Build.VERSION_CODES.LOLLIPOP)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WorkJobService</span> <span class="keyword">extends</span> <span class="title">JobService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MSG_JOB = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Handler mJobProcessor = <span class="keyword">new</span> Handler(<span class="keyword">new</span> Handler.Callback() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(msg.what==MSG_JOB)&#123;</span><br><span class="line">                JobParameters params = (JobParameters) msg.obj;</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 完成异步工作之后 必须触发jobFinished以使下一个计划任务运行</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                doSomething();</span><br><span class="line">                jobFinished(params, <span class="keyword">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doSomething</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, <span class="string">"time:"</span> + System.currentTimeMillis(), Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onStartJob</span><span class="params">(JobParameters params)</span> </span>&#123;</span><br><span class="line">        mJobProcessor.sendMessageDelayed(</span><br><span class="line">                Message.obtain(mJobProcessor, MSG_JOB, params),</span><br><span class="line">                <span class="number">5000</span>);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 1.如果此处异步完成作业,false;</span></span><br><span class="line"><span class="comment">         * 2.如果需要执行更多后台工作,true;</span></span><br><span class="line"><span class="comment">         * 对于第二种情况必须调用jobFinished()以通知系统作业完成</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onStopJob</span><span class="params">(JobParameters params)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//停止作业时,必须取消挂起的作业</span></span><br><span class="line">        mJobProcessor.removeMessages(MSG_JOB);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * true计划作业</span></span><br><span class="line"><span class="comment">         * false删除作业</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:不要忘记在清单文件中注册,JobService本身继承Service,和普通的service区别是需要加上这个权限 <code>android:permission=&quot;android.permission.BIND_JOB_SERVICE&quot;</code>,否则在执行计划任务时会产生异常,我们需要将此服务暴露给framework,因此Android要求通过<strong>BIND_JOB_SERVICE</strong>权限保护该服务,只有framework可以拥有该权限,它保护我们的服务不被其他应用程序访问,<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:testOnly</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</span></span><br><span class="line">        ......</span><br><span class="line">      <span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">".WorkJobService"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">android:permission</span>=<span class="string">"android.permission.BIND_JOB_SERVICE"</span>/&gt;</span></span><br><span class="line">        ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="JobSchedulerActivity"><a href="#JobSchedulerActivity" class="headerlink" title="JobSchedulerActivity"></a>JobSchedulerActivity</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JobSchedulerActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    JobScheduler jobScheduler;</span><br><span class="line">    <span class="keyword">int</span> interval = <span class="number">5000</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> JOB_ID = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> JobInfo mJobInfo;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TargetApi</span>(Build.VERSION_CODES.LOLLIPOP)</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_job_scheduler);</span><br><span class="line">        jobScheduler = (JobScheduler) getSystemService(Context.JOB_SCHEDULER_SERVICE);</span><br><span class="line">        mJobInfo = <span class="keyword">new</span> JobInfo.Builder(</span><br><span class="line">                JOB_ID,</span><br><span class="line">                <span class="keyword">new</span> ComponentName(getPackageName(), WorkJobService.class.getName())</span><br><span class="line">        )</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 表示应在给定时间间隔内定期运行作业,直到其被明确取消</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                .setPeriodic(interval)</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 描述作业运行必备的网络条件</span></span><br><span class="line"><span class="comment">                 * NETWORK_TYPE_NONE = 0 默认值,表示作业不需要网络访问</span></span><br><span class="line"><span class="comment">                 * NETWORK_TYPE_ANY = 1 需要网络连接</span></span><br><span class="line"><span class="comment">                 * NETWORK_TYPE_UNMETERED = 2 必须是wifi网络状态,否则不会触发作业</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                .setRequiredNetworkType(JobInfo.NETWORK_TYPE_ANY)</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 作业运行,必须时在设备充电状态</span></span><br><span class="line"><span class="comment">                 * 适合较少执行,但是比较耗电的任务</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                .setRequiresCharging(<span class="keyword">true</span>)</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 作业运行,必须时在设备未激活或睡眠状态</span></span><br><span class="line"><span class="comment">                 * 适合较少执行,但是比较耗电的任务</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                .setRequiresDeviceIdle(<span class="keyword">true</span>)</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 设置设备重启时,如何启动计划作业</span></span><br><span class="line"><span class="comment">                 * true 由framework自动启动计划作业</span></span><br><span class="line"><span class="comment">                 * false 由应用手动启动计划作业(默认)</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                .setPersisted(<span class="keyword">false</span>)</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 设置对于失败的作业如何何时重新计划使其再次运行</span></span><br><span class="line"><span class="comment">                 * 如:在资源(网络访问等)临时不可用时尽可能减少不必要的重试次数</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                .setBackoffCriteria(DEFAULT_INITIAL_BACKOFF_MILLIS, BACKOFF_POLICY_EXPONENTIAL)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@TargetApi</span>(Build.VERSION_CODES.LOLLIPOP)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 多次执行同一个任务返回同一个任务id,不会重复执行任务</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">int</span> result = jobScheduler.schedule(mJobInfo);</span><br><span class="line">        <span class="keyword">if</span> (result &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">"失败"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">"成功"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@TargetApi</span>(Build.VERSION_CODES.LOLLIPOP)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 任务id必须匹配传递给JobInfo的id,需要保存该id</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        jobScheduler.cancel(JOB_ID);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;JobScheduler是Android5.0及以后的版本由系统提供的用于解决高效处理&lt;strong&gt;计划后台工作&lt;/strong&gt;的&lt;em&gt;系统服务&lt;/em&gt;&lt;br&gt;即使应用程序进程当前未运行,计划的任务也会运行,框架自动处理为计划作业获得唤醒锁
      
    
    </summary>
    
    
      <category term="android" scheme="http://tsdking.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>最快最简单的排序算法</title>
    <link href="http://tsdking.github.io/2018/04/16/sort-algorithm-1/"/>
    <id>http://tsdking.github.io/2018/04/16/sort-algorithm-1/</id>
    <published>2018-04-16T15:31:58.000Z</published>
    <updated>2018-04-16T16:05:05.498Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://i1.bvimg.com/577927/250a0b827531fd9c.png" alt="如图"></p><blockquote><p>桶排序的基本思想是将一个数据表分割成许多buckets，然后每个bucket各自排序，或用不同的排序算法，或者递归的使用bucket sort算法。也是典型的divide-and-conquer分而治之的策略。它是一个分布式的排序，介于MSD基数排序和LSD基数排序之间。</p></blockquote><h2 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h2><ul><li>建立一堆buckets； </li><li>遍历原始数组，并将数据放入到各自的buckets当中； </li><li>对非空的buckets进行排序； </li><li>按照顺序遍历这些buckets并放回到原始数组中即可构成排序后的数组。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 定义一个length=11的int数组book用来记录</span></span><br><span class="line"><span class="comment">         * 并舒适化默认值都为0</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">int</span>[] book=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">11</span>];</span><br><span class="line">        <span class="keyword">int</span> length1 = book.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line">            book[i]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 定义一个任意length的数组source，但是保证数组中每个元素在[0,10]内</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">int</span>[] source=&#123;<span class="number">0</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">9</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> length = source.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * source中的元素每出现一次</span></span><br><span class="line"><span class="comment">             * book中对应下标的值就加1</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            book[source[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">10</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 序号出现几次就打印几次</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;=book[i] ; j++) &#123;</span><br><span class="line">                System.out.print(i+<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="简单解释"><a href="#简单解释" class="headerlink" title="简单解释"></a>简单解释</h2><p>上述代码是桶排序算法简单的java实现，形象地描述就是如果我们要对0~10之间的数字排序，那么我们就准备11个桶（0~10共11个数），每出现一个数，就在对应编号的桶中放一个小旗子，最后只要数一数每个桶中有几个小旗子就行了。</p><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><p>每个桶的作用实际就是标记每个数出现的次数。该算法的时间复杂度是O（m+n+m+n）即O（2*（m+n）），忽略较小的常数，最终桶排序的时间复杂度为O（M+N），这是一个很快的排序算法（时间复杂度通常用大写字母表示）；</p><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><p>特费空间，这是典型的空间换时间，还有如果要对一些小数排序，怎么办？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://i1.bvimg.com/577927/250a0b827531fd9c.png&quot; alt=&quot;如图&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;桶排序的基本思想是将一个数据表分割成许多buckets，然后每个bucket各自排序，或用不同的
      
    
    </summary>
    
    
      <category term="算法" scheme="http://tsdking.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客搭建笔记</title>
    <link href="http://tsdking.github.io/2018/04/14/hexo-blog-note/"/>
    <id>http://tsdking.github.io/2018/04/14/hexo-blog-note/</id>
    <published>2018-04-14T08:34:09.740Z</published>
    <updated>2018-04-14T09:13:03.145Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="一、安装基础环境"><a href="#一、安装基础环境" class="headerlink" title="一、安装基础环境"></a>一、安装基础环境</h2><ul><li><strong><a href="https://nodejs.org/zh-cn/download/releases/" target="_blank" rel="noopener">Node.js</a></strong></li><li><strong><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a></strong><br>具体安装过程自行搜索，通过以下两条命令验证是否安装成功，否则不能执行第二步；<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node --version</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure></li></ul><h2 id="二、安装hexo"><a href="#二、安装hexo" class="headerlink" title="二、安装hexo"></a>二、安装hexo</h2><p><strong><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo官网</a></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h2 id="三、初始化项目"><a href="#三、初始化项目" class="headerlink" title="三、初始化项目"></a>三、初始化项目</h2><ol><li>使用如下命令初始化项目<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>命令中<code>blog</code>可随意命名，有意义即可，相当于项目的根目录，以后所有的操作都在该目录下，该命令在哪执行就在哪创建项目；当然，也可以先创建项目文件夹，cd到项目文件夹后再执行<code>init</code>命令。<br><strong>命令执行后，框架会自动下载相关资源，并完成初始化</strong><br>该过程的长短取决于你的网速</p></blockquote><p>生成各目录的作用</p><ul><li>node_modules：各种依赖包</li><li>public：存放生成的静态页面</li><li>scaffolds：命令生成文章等的模板</li><li>source：用命令创建的各种文章md文件</li><li>themes：存放各种主题</li><li>_config.yml：整个博客的配置</li><li>db.json：source解析所得到的</li><li>package.json：项目所需模块项目的配置信息</li></ul><p>2.进入项目目录,安装框架依赖的模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><blockquote><p>该命令会安装 ./node_modules目录下的安装包</p><p>至此，整个项目初始化完成，可以执行以下命令欣赏一下了</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><blockquote><p>该命令主要用来启动本地服务器，预览项目</p></blockquote><h2 id="四、安装主题（可选）"><a href="#四、安装主题（可选）" class="headerlink" title="四、安装主题（可选）"></a>四、安装主题（可选）</h2><p>这里简单推荐几个：</p><ul><li><a href="https://github.com/yscoder/hexo-theme-indigo" target="_blank" rel="noopener">hexo-theme-indigo</a></li><li><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a></li><li><a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">hexo-theme-yilia</a></li><li><a href="https://github.com/viosey/hexo-theme-material" target="_blank" rel="noopener">hexo-theme-material</a></li><li><a href="https://github.com/ppoffice/hexo-theme-icarus" target="_blank" rel="noopener">hexo-theme-icarus</a></li></ul><p>具体配置请查看各主题wiki文档，可能会用到的几个命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><h2 id="五-发布到GitHub-Pages"><a href="#五-发布到GitHub-Pages" class="headerlink" title="五,发布到GitHub Pages"></a>五,发布到GitHub Pages</h2><ol><li>以<username>.github.io为名创建一个新仓库，具体操作看官方<a href="https://help.github.com/categories/github-pages-basics/" target="_blank" rel="noopener">文档</a></username></li><li>简单配置一下_config.yml文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:tsdking/tsdking.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line">  message: &apos;站点更新:&#123;&#123;now(&quot;YYYY-MM-DD HH/mm/ss&quot;)&#125;&#125;&apos;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>注意repo换成自己上一步新建仓库的地址</p></blockquote><h2 id="六、发布"><a href="#六、发布" class="headerlink" title="六、发布"></a>六、发布</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><blockquote><p>注意：需要先安装hexo-deployer-git<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-get --save</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h2 id=&quot;一、安装基础环境&quot;&gt;&lt;a href=&quot;#一、安装基础环境&quot; class=&quot;headerlink&quot; title=&quot;一、安装基础环境&quot;&gt;&lt;/a&gt;一、安装基础环境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://nodejs.org
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://tsdking.github.io/2017/11/28/hello-world/"/>
    <id>http://tsdking.github.io/2017/11/28/hello-world/</id>
    <published>2017-11-28T07:02:25.505Z</published>
    <updated>2017-11-28T07:02:25.506Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
