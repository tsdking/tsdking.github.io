[{"title":"最快最简单的排序算法","date":"2018-04-16T15:31:58.000Z","path":"2018/04/16/sort-algorithm-1/","text":"桶排序的基本思想是将一个数据表分割成许多buckets，然后每个bucket各自排序，或用不同的排序算法，或者递归的使用bucket sort算法。也是典型的divide-and-conquer分而治之的策略。它是一个分布式的排序，介于MSD基数排序和LSD基数排序之间。 基本流程 建立一堆buckets； 遍历原始数组，并将数据放入到各自的buckets当中； 对非空的buckets进行排序； 按照顺序遍历这些buckets并放回到原始数组中即可构成排序后的数组。 12345678910111213141516171819202122232425262728293031public static void main(String[] args) &#123; /** * 定义一个length=11的int数组book用来记录 * 并舒适化默认值都为0 */ int[] book=new int[11]; int length1 = book.length; for (int i = 0; i &lt; 11; i++) &#123; book[i]=0; &#125; /** * 定义一个任意length的数组source，但是保证数组中每个元素在[0,10]内 */ int[] source=&#123;0,8,3,3,5,2,9&#125;; int length = source.length; for (int i = 0; i &lt; length; i++) &#123; /** * source中的元素每出现一次 * book中对应下标的值就加1 */ book[source[i]]++; &#125; for (int i = 10; i &gt;= 0; i--) &#123; /** * 序号出现几次就打印几次 */ for (int j = 1; j &lt;=book[i] ; j++) &#123; System.out.print(i+\" \"); &#125; &#125; &#125; 简单解释上述代码是桶排序算法简单的java实现，形象地描述就是如果我们要对0~10之间的数字排序，那么我们就准备11个桶（0~10共11个数），每出现一个数，就在对应编号的桶中放一个小旗子，最后只要数一数每个桶中有几个小旗子就行了。 优点每个桶的作用实际就是标记每个数出现的次数。该算法的时间复杂度是O（m+n+m+n）即O（2*（m+n）），忽略较小的常数，最终桶排序的时间复杂度为O（M+N），这是一个很快的排序算法（时间复杂度通常用大写字母表示）； 缺点特费空间，这是典型的空间换时间，还有如果要对一些小数排序，怎么办？","tags":[{"name":"算法","slug":"算法","permalink":"http://tsdking.github.io/tags/算法/"}]},{"title":"Hexo博客搭建笔记","date":"2018-04-14T08:34:09.740Z","path":"2018/04/14/hexo-blog-note/","text":"一、安装基础环境 Node.js Git具体安装过程自行搜索，通过以下两条命令验证是否安装成功，否则不能执行第二步；12node --versiongit --version 二、安装hexoHexo官网 1npm install hexo-cli -g 三、初始化项目 使用如下命令初始化项目1hexo init blog 命令中blog可随意命名，有意义即可，相当于项目的根目录，以后所有的操作都在该目录下，该命令在哪执行就在哪创建项目；当然，也可以先创建项目文件夹，cd到项目文件夹后再执行init命令。命令执行后，框架会自动下载相关资源，并完成初始化该过程的长短取决于你的网速 生成各目录的作用 node_modules：各种依赖包 public：存放生成的静态页面 scaffolds：命令生成文章等的模板 source：用命令创建的各种文章md文件 themes：存放各种主题 _config.yml：整个博客的配置 db.json：source解析所得到的 package.json：项目所需模块项目的配置信息 2.进入项目目录,安装框架依赖的模块 1npm install 该命令会安装 ./node_modules目录下的安装包 至此，整个项目初始化完成，可以执行以下命令欣赏一下了 1hexo server 该命令主要用来启动本地服务器，预览项目 四、安装主题（可选）这里简单推荐几个： hexo-theme-indigo hexo-theme-next hexo-theme-yilia hexo-theme-material hexo-theme-icarus 具体配置请查看各主题wiki文档，可能会用到的几个命令 123hexo cleanhexo ghexo server 五,发布到GitHub Pages 以.github.io为名创建一个新仓库，具体操作看官方文档 简单配置一下_config.yml文件12345deploy: type: git repo: git@github.com:tsdking/tsdking.github.io.git branch: master message: &apos;站点更新:&#123;&#123;now(&quot;YYYY-MM-DD HH/mm/ss&quot;)&#125;&#125;&apos; 注意repo换成自己上一步新建仓库的地址 六、发布1hexo d -g 注意：需要先安装hexo-deployer-git1npm install hexo-deployer-get --save","tags":[]},{"title":"Hello World","date":"2017-11-28T07:02:25.505Z","path":"2017/11/28/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]